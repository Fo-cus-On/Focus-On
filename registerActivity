package com.czorange.focus_on;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.AsyncHttpResponseHandler;
import com.loopj.android.http.RequestParams;

import org.apache.http.Header;
import org.json.JSONException;
import org.json.JSONObject;

public class registerActivity extends AppCompatActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register);

		register = (Button) findViewById(R.id.btn_register);
		back = (Button) findViewById(R.id.btn_back);

		et_username = (EditText) findViewById(R.id.et_username);
		et_password = (EditText) findViewById(R.id.et_password);
		et_repassword = (EditText) findViewById(R.id.et_repassword);

		back.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(registerActivity.this,loginActivity.class);
				startActivity(intent);
				registerActivity.this.finish();
			}
		});

		register.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				final String username = et_username.getText().toString();
				final String password = et_password.getText().toString();
				final String repassword = et_repassword.getText().toString();

				if(username.equals("") || password.equals("")){
					Toast.makeText(registerActivity.this, "用户名或者密码不能为空", Toast.LENGTH_LONG).show();
				}
				else if(!password.equals(repassword)) {
					Toast.makeText(registerActivity.this, "两次输入的密码必须相同", Toast.LENGTH_LONG).show();
				}
				else {
					AsyncHttpClient client = new AsyncHttpClient();
					RequestParams params = new RequestParams();
					params.put("username", username);
					params.put("password", password);
					String url = "http://119.29.140.227/focus/reg.php";

					client.post(url, params, new AsyncHttpResponseHandler() {
						@Override
						public void onSuccess(int i, Header[] headers, byte[] bytes) {
							String response = new String(bytes);
							Log.e("debug", response);
							JSONObject object = null;
							try{
								object = new JSONObject(response);
								String status = object.getString("status");
								if (status.equals("exists")) {
									Toast.makeText(registerActivity.this, "用户已存在", Toast.LENGTH_LONG).show();
								}else if (status.equals("success")) {
									Toast.makeText(registerActivity.this, "注册成功,请返回登录界面", Toast.LENGTH_LONG).show();
								}else{
									Toast.makeText(registerActivity.this, "出现错误，请重试", Toast.LENGTH_LONG).show();
								}
							}catch (JSONException e) {
								e.printStackTrace();
							}
						}

						@Override
						public void onFailure(int i, Header[] headers, byte[] bytes, Throwable throwable) {
							Toast.makeText(registerActivity.this, "网络错误，请重试", Toast.LENGTH_LONG).show();
						}
					});
				}
			}
		});
	}

	private Button register,back;
	private EditText et_username,et_password,et_repassword;
}
